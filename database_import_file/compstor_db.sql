-- MySQL Script generated by MySQL Workbench
-- Thu Oct 19 23:27:11 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema compstore
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema compstore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `compstore` DEFAULT CHARACTER SET utf8 ;
USE `compstore` ;

-- -----------------------------------------------------
-- Table `compstore`.`account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `compstore`.`account` (
  `account_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `FirstName` VARCHAR(45) NULL,
  `LastName` VARCHAR(45) NULL,
  `Email` VARCHAR(50) NOT NULL,
  `PhoneNumber` VARCHAR(15) NULL,
  `Admin` TINYINT(1) NULL,
  `Password` VARCHAR(45) NULL,
  `StreetName` VARCHAR(45) NULL,
  `StreetNumber` VARCHAR(45) NULL,
  `City` VARCHAR(45) NULL,
  `Province` VARCHAR(45) NULL,
  `Country` VARCHAR(45) NULL,
  `PostalCode` VARCHAR(15) NULL,
  PRIMARY KEY (`account_ID`, `Email`),
  INDEX `account_index` (`account_ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `compstore`.`Purchases`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `compstore`.`purchases` (
  `purchases_ID` INT(11) NOT NULL,
  `PurchaseDate` DATETIME NULL,
  `account_ID` INT(11) NOT NULL,
  `TotalCost` DOUBLE NULL,
  PRIMARY KEY (`purchases_ID`, `account_ID`),
  INDEX `account_IDpurchases_index` (`account_ID` ASC),
  INDEX `purchases_ID` (`purchases_ID` ASC),
  CONSTRAINT `Account_IDpurchases`
    FOREIGN KEY (`account_ID`)
    REFERENCES `compstore`.`account` (`account_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `compstore`.`tablet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `compstore`.`tablet` (
  `tablet_ID` INT(11) NOT NULL,
  `Key` VARCHAR(10) NULL,
  `Value` VARCHAR(10) NULL,
  `SerialNumber` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tablet_ID`, `SerialNumber`),
  INDEX `SerialNumber` (`SerialNumber` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `compstore`.`laptop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `compstore`.`laptop` (
  `laptop_ID` INT(11) NOT NULL,
  `Key` VARCHAR(10) NULL,
  `Value` VARCHAR(10) NULL,
  `SerialNumber` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`laptop_ID`, `SerialNumber`),
  INDEX `SerialNumber` (`SerialNumber` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `compstore`.`monitor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `compstore`.`monitor` (
  `monitor_ID` INT(11) NOT NULL,
  `Key` VARCHAR(10) NULL,
  `Value` VARCHAR(10) NULL,
  `SerialNumber` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`monitor_ID`, `SerialNumber`),
  INDEX `SerialNumber` (`SerialNumber` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `compstore`.`desktopComputer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `compstore`.`desktopComputer` (
  `desktopComputer_ID` INT(11) NOT NULL,
  `Key` VARCHAR(10) NULL,
  `Value` VARCHAR(10) NULL,
  `SerialNumber` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`desktopComputer_ID`, `SerialNumber`),
  INDEX `SerailNumber` (`SerialNumber` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `compstore`.`purchaseList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `compstore`.`purchaseList` (
  `purchaseList_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `ProductSerialNumber` VARCHAR(45) NOT NULL,
  `purchases_ID` INT(11) NOT NULL,
  PRIMARY KEY (`purchaseList_ID`, `ProductSerialNumber`, `purchases_ID`),
  UNIQUE INDEX `ID_UNIQUE` (`purchaseList_ID` ASC),
  UNIQUE INDEX `ProductSerialNumber_UNIQUE` (`ProductSerialNumber` ASC),
  INDEX `purchase_ID_index` (`purchases_ID` ASC),
  INDEX `ProductSerialNumber_index` (`ProductSerialNumber` ASC),
  CONSTRAINT `purchases_ID`
    FOREIGN KEY (`purchases_ID`)
    REFERENCES `compstore`.`purchases` (`purchases_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `SerialMonitor`
    FOREIGN KEY (`ProductSerialNumber`)
    REFERENCES `compstore`.`monitor` (`SerialNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `SerialLaptop`
    FOREIGN KEY (`ProductSerialNumber`)
    REFERENCES `compstore`.`laptop` (`SerialNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `SerialTablet`
    FOREIGN KEY (`ProductSerialNumber`)
    REFERENCES `compstore`.`tablet` (`SerialNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `SerialComputer`
    FOREIGN KEY (`ProductSerialNumber`)
    REFERENCES `compstore`.`desktopComputer` (`SerialNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `compstore`.`audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `compstore`.`audit` (
  `account_ID` INT(11) NOT NULL,
  `Logout` DATETIME NULL,
  `Login` DATETIME NULL,
  `IsActive` TINYINT(1) NULL,
  PRIMARY KEY (`account_ID`),
  INDEX `account_ID_index` (`account_ID` ASC),
  CONSTRAINT `account_IDaudit`
    FOREIGN KEY (`account_ID`)
    REFERENCES `compstore`.`account` (`account_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
